/* Adjusting Prior Probabilities with %EMTP */ 

filename code catalog "sashelp.emutil.em_loadutilmacros.source"; /* Compile EMDS macro */
%include code / source2; 
filename code catalog "sashelp.emutil.emtp.source"; 
%include code / source2; /* Compile EMTP Macro */

/* Set path to global metadata directory for Enterprise Miner */
libname EMGDS 'D:\SAS\HUK\meta'; 
/* Set path to the data */
libname dat "C:\Users\autmip\Documents\Education\Data"; 

/* Create Metadata *_CM *_TM *_P */
%EMDS(data=dat.CLAIMS_FULL, target=Claim, 
      AdviseMode=advanced,
      ApplyMaxClassLevels=Y,
      MaxClassLevels=25);

/* Extract name of the decision datasets  */
data _null_;
length name newname $40;
name = "&emds_cm";
l = length(name);
decmeta = substr(name,1,l-3)||'_m0';
decdata = substr(name,1,l-3)||'_d0';
tpdata = substr(name,1,l-3)||'_tp';
call symputx('decdata',decdata);
call symputx('decmeta',decmeta);
call symputx('tpdata',tpdata);
run;

%put decdata =&decdata;
%put decmeta =&decmeta;
%put tpdata =&tpdata;

/* Build a target profile registration data set. 
Without this dataset your decision datasets generated by %EMTP will 
no be used or shown in EM. Its requirements are not documented. */

data &tpdata.;
length ProfileID 8;
length ProfileName $64;
length Target $64;
length Level $16;
length Use $8;
ProfileID = 0;
ProfileName='Profile 0';
Target='Claim';
Level='BINARY';
Use='Y';
output;
run; 

/* Create decision datasets for you data in the EMGDS library. You need them all */
%EMTP(data = dat.CLAIMS_FULL, 
      target = Claim,
      columnsmeta = &emds_cm,
      decdata = &decdata,
      decmeta = &decmeta);

/* Set usage of adjusted prior probabilities */
data &decmeta; 
 set &decmeta; 
 if _type_ = 'DATAPRIOR' then use='N'; 
 else if _type_='TRAINPRIOR' then use='N';
else if _type_='DECPRIOR' then use='Y';
run; 


/* Set Adjusted prior probabilities */
data &decdata.; 
  set &decdata.; 
  if claim='1' then decprior=0.01;
  else decprior=0.99; 
run; 

/* Result in Scorecode after using Logistic Regression: 
 
*** Update Posterior Probabilities;
_P0 = _P0 * 0.01 / 0.26890427060206;
_P1 = _P1 * 0.99 / 0.73109572939793;

*/



   /********************************************************************/
   /********** Bar Charts **********/

   /* create a bar chart from a vector of data */
   use Sasuser.Movies;
   read all var {"MPAARating"};                             /* 1 */
   close Sasuser.Movies;  

   declare BarChart bar;                                    /* 2 */
   bar = BarChart.Create("Ratings", MPAARating);            /* 3 */


   /* create data object from SAS data set */
   declare DataObject dobj;
   dobj = DataObject.CreateFromServerDataSet("Sasuser.Movies");

   /* create a bar chart from a data object */
   declare BarChart bar2;                         
   bar2 = BarChart.Create(dobj, "MPAARating");     

   bar.SetAxisLabel(XAXIS, "MPAA Rating"); /* change the axis label    */
   bar.ShowBarLabels();                    /* show counts for each bar */

   bar.ShowPercentage(true);      /* display percents                  */
   bar.SetOtherThreshold(5.0);    /* merge bars that have small counts */


   /********************************************************************/
   /********** Histograms **********/

   /* create a histogram from a vector of data */
   use Sasuser.Movies;
   read all var {"Budget"};                        /* 1 */
   close Sasuser.Movies;  

   declare Histogram hist;                         /* 2 */
   hist = Histogram.Create("Budget", Budget);      /* 3 */
   hist.SetAxisLabel(XAXIS, "Budget (million $)"); /* change axis label */


   /* create a histogram from a data object */
   declare Histogram hist2;
   hist2 = Histogram.Create(dobj, "Budget");     


   /* calculate new histogram bins */
   /* get current anchor and bin width: Terrell and Scott (1985) */
   x0 = hist.GetAxisTickAnchor(XAXIS);             /* 4 */
   h0 = hist.GetAxisTickUnit(XAXIS);

   /* Freedman-Diaconis robust rule (1981) */
   nNonmissing = sum(Budget^=.);                   /* 5 */
   q = quartile(Budget);                           /* 6 */
   IQR = q[4] - q[2];
   h = 2.603 * IQR * nNonmissing##(-1/3);          /* 7 */
   print x0 h0 h;

   h = round(h, 1);                                /* round to integer */
   hist.ReBin(x0, h);                              /* 8 */


   /********************************************************************/
   /********** Scatter Plots **********/

   /* create a scatter plot from vectors of data */
   use Sasuser.Movies;
   read all var {"Budget" "US_Gross"};           
   close Sasuser.Movies;  
   
   declare ScatterPlot p;
   p = ScatterPlot.Create("Scatter", Budget, US_Gross);
   p.SetAxisLabel(XAXIS, "Budget (million $)");
   p.SetAxisLabel(YAXIS, "US Gross (million $)");


   /* create a scatter plot from a data object */
   declare ScatterPlot p2;
   p2 = ScatterPlot.Create(dobj, "Budget", "US_Gross");


   /********************************************************************/
   /********** Line Plots **********/

   /* create a line plot from vectors of data */
   use Sasuser.Movies;
   read all var {"ReleaseDate" "US_Gross"};           
   close Sasuser.Movies;  
   
   declare LinePlot line;
   line = LinePlot.Create("Line", ReleaseDate, US_Gross);
   line.SetAxisLabel(XAXIS, "Release Date");
   line.SetAxisLabel(YAXIS, "Budget (million $)");


   /* create a line plot from a data object */
   declare LinePlot line2;
   line2 = LinePlot.Create(dobj, "ReleaseDate", "US_Gross");

   /* create a line plot of several Y variables */
   x = t(do(-3.3, 3.3, 0.1));    /* evenly spaced points (t=transpose) */
   normal = pdf("normal", x);    /* evaluate normal density at x       */
   t4  = pdf("t", x, 4);         /* evaluate t distrib with 4 d.o.f    */
   t12 = pdf("t", x, 12);        /* evaluate t distrib with 12 d.o.f   */

   declare LinePlot lp;
   lp = LinePlot.Create("Line", x, normal || t12 || t4);
   lp.ShowObs(false);            /* do not show observation markers    */
   lp.SetLineWidth(2);           /* set all line widths to 2           */
   lp.SetLineStyle(2, DASHED);   /* set style of second line           */
   lp.SetLineStyle(3, DOTTED);   /* set style of third line            */

   /* create data object from vectors */
   varNames = {"x" "pdf_normal" "pdf_t12" "pdf_t4"};
   declare DataObject dobjVec;
   dobjVec = DataObject.Create("Data", varNames, x || normal || t12 || t4 );

   /* create a line plot of several variables from a data object */
   declare LinePlot lp2;
   lp2 = LinePlot.Create(dobjVec, "x", {"pdf_normal" "pdf_t12" "pdf_t4"});

   /* create a line plot by specifying a classification (group) variable  */
   use Sasuser.Movies where (MPAARating^="NR");
   read all var {"ReleaseDate" "MPAARating" "Sex" "Violence" "Profanity"};
   close Sasuser.Movies;  
   
   Total = Sex + Violence + Profanity;    /* score for "adult situations" */

   declare LinePlot lpg;
   lpg = LinePlot.CreateWithGroup("Line", 
                                  ReleaseDate, /* x coordinate            */
                                  Total,       /* y quantity to plot      */
                                  MPAARating   /* classification variable */
                                  );
   lpg.SetAxisLabel(XAXIS, "Release Date");
   lpg.SetAxisLabel(YAXIS, "Sex + Violence + Profanity");
   lpg.SetLineWidth(2);
   lpg.SetLineStyle(2, DASHED);
   lpg.SetLineStyle(3, DOTTED);


   /* use the DATA step to transform a variable */
   submit;
   data NewMovies;
      set Sasuser.Movies;
      Total = Sex + Violence + Profanity; /* score for "adult situations" */
   run;
   endsubmit;

   declare DataObject dobjNew;
   dobjNew = DataObject.CreateFromServerDataSet("Work.NewMovies");

   /* create a line plot with a group variable from a data object */
   declare LinePlot lpg2;
   lpg2 = LinePlot.CreateWithGroup(dobjNew, 
                                "ReleaseDate", /* x coordinate            */
                                "Total",       /* y quantity to plot      */
                                "MPAARating"   /* classification variable */
                                );


   /********************************************************************/
   /********** Box Plots **********/


   /* create a box plot from a vector of data */
   use Sasuser.Movies;
   read all var {"US_Gross"};                               /* 1 */
   close Sasuser.Movies;  

   declare BoxPlot box;                                     /* 2 */
   box = BoxPlot.Create("Box", US_Gross);                   /* 3 */
   box.SetAxisLabel(YAXIS, "US Gross (million $)");


   /* create a box plot from a data object */
   declare BoxPlot box2;
   box2 = BoxPlot.Create(dobj, "US_Gross");

   /* create a box plot from vectors of data */
   use Sasuser.Movies;
   read all var {"MPAARating" "US_Gross"};
   close Sasuser.Movies;

   declare BoxPlot bg;
   bg = BoxPlot.Create("Box Plot", MPAARating, US_Gross);
   bg.SetAxisLabel(XAXIS, "MPAA Rating");
   bg.SetAxisLabel(YAXIS, "US Gross (million $)");


   /* create a box plot with a group variable from a data object */
   declare BoxPlot bg2;
   bg2 = BoxPlot.Create(dobj, "MPAARating", "US_Gross");

   bg.SetWhiskerLength(3);
   bg.ShowMeanMarker();
   bg.ShowNotches();


   /********************************************************************/
   /********** Changing the  Format of a Graph Axis **********/


   /* create a scatter plot from vectors of data */
   use Sasuser.Movies;
   read all var {"ReleaseDate" "Budget"};             
   close Sasuser.Movies;  
   
   declare ScatterPlot p;
   p = ScatterPlot.Create("Scatter", ReleaseDate, Budget);
   p.SetAxisLabel(XAXIS, "Release Date");
   p.SetAxisLabel(YAXIS, "Budget (million $)");

   x = do(16500, 17500, 250);       /* row vector of sequential values */
   print x, x[format=DATE7.];

   /* set formats for variables in a data object */
   declare DataObject dobj;
   dobj = p.GetDataObject();
   dobj.SetVarFormat("X", "DATE7.");
   dobj.SetVarFormat("Y", "DOLLAR4.");

